# 本地数据

1.文件打开
	file object = open(file_name [, access_mode== 'r'][, buffering == -1])
									access_mode：access_mode决定了打开文件的模式：只读，写入，追加等
								 buffering:  0代表不缓冲(寄存)，1或大于1的值表示缓冲一行或指定缓冲区大小，如果取负值，寄存区的缓冲大小则为系统默认。
	返回file对象，可迭代
	////// r 读， b二进制， w 写（会判断是否文件已存在）， a 追加写（会判断是否文件已存在）， + 兼容 读/写
		r	以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。
		r+	打开一个文件用于读写。文件指针将会放在文件的开头。

		rb	以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。
		rb+	以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。

		w	打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
		w+	打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。

		wb	以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
		wb+	以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。

		a	打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾，新的内容将会被写入到已有内容之后。
								如果该文件不存在，创建新文件进行写入。
		ab	以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾，新的内容将会被写入到已有内容之后。
								如果该文件不存在，创建新文件进行写入。
		a+	打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。
								如果该文件不存在，创建新文件用于读写。
		ab+	以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。
											 如果该文件不存在，创建新文件用于读写。
	//////								 
		object.write()