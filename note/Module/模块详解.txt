1.写一个.py后缀的文件，使用的时候 import
2.将文件添加到python解释器系统目录:这里只是告诉解释器，除了从模块默认目录外，还需要从目录c:\python中寻找模块

	>>>impot sys
	>>>sys.path.append('d:/documents/python')
注：在Unix系统中，不能只是简单的将字符串'~/python'添加到sys.path中，必须使用完整路径。
       可以使用 sys.path.expanduser('~/python')
导入模块的过程，可能会看到有新文件出现，c:\python\hello.pyc.
这个文件是经过编译器处理的与平台无关的，已经转换成python能够更加有效地处理的文件，如果稍后导入同一模块，python会导入.pyc文件而不是.py文件，除非.py文件已经被改变――此时会生成新的.pyc文件。删除.pyc文件不会损坏程序。

模块用于定义：
	模块(像类一样)可以保持自己的作用域：
	定义的所有类和函数以及赋值后的变量都成了模块的特性。
1.模块化：
	如果希望程序能够与其他模块一起供其他程序使用，可以用Python解释器使用-m切换开关来执行顺序。
	那么程序和其他模块都被安装了（也就是导入了）。
2.模块中的测试代码：
	如果模块中含有测试代码（经常），其他程序在使用模块时，测试代码就会被执行。
	解决办法：
	”告知“模块本身是作为程序运行还是导入到其他程序。
	使用__name__变量：
	（在主程序中，变量__name的值是__main__，而在导入的模块中，这个值就设定为模块的名字）

	# hello4.py

	def hello():
		  print("Hello,wold")

	def test():
		  hello()

	if __name__=='__main__':test()
	此时如果将它作为程序运行，hello函数会被执行。而作为模块导入时，不会执行测试语句。
3.模块路径：标准的实现方法是在PythonPath环境变量中包含模块所在的目录
	1)将模块放在正确位置
	2)告诉编译器去哪里找
	3)命名模块
		包含模块代码的文件要和模块名一样，再加上.py扩展名。
4.包：
	包基本上是另外一类模块，能包含其他模块。
	为了让Python将其作为包对待，它必须包含一个命名为__iniy__py的文件（模块）。
	使用：

		>>>import drawing                #导入包:仅仅可用drawing中__init__模块，但drawing模块不可用
		>>>import drawing.colors         #导入colors模块：但只能通过全名drawing.color来使用
		>>>from drawing imports shapes   #导入shapes模块:此时可以通过shapes使用

	#注：以上注释不考虑上下文代码

探究模块：
	1.模块中有什么：使用dir：会将对象（以及模块的所有函数，类，变量等）的所有特性列出
	2.__all__变量：这个变量包含一个列表，定义了模块的公有接口（public interface）
	>>>from copy import *          #只能导入__all__变量中的4个函数，要导入其他，就得显示实现，或者导入包后使用 packageName.module,
									#或者使用from copy import model
        #有效的过滤了 模块中所有不以下划线开头的全局名称

获取帮助：
	有个标准函数能够为你提供日常所需的信息。例如  help(copy.copy)
	查看模块信息from文档：print range.__doc__
	查看库参考：http://python.org/doc/lib
	使用源代码:检查模块的__file__属性查看文档位置，然后打开内部。sys模块并不包含任何可以阅读的Python源代码，因为已经融入到解释器内呢，或者是用C语言写的

常用标准库：
	sys：通过该模块可以访问多个Python解释器紧密练习的变量和函数
	os：可以访问到多个和操作系统练习紧密的变量和函数
	fileinput：轻松遍历多个文件和流中的所有行
	re：
		re模块包含正则表达式（regular expression）.
		正则表达式是可以匹配文本片段的模式。最简单的正则表达式就是普通字符串，可以匹配其自身。
		贪婪模式与非贪婪模式：
		贪婪模式：寻找符合匹配要求的字符最多集合。非贪婪模式:寻找符合匹配要求的第一个。
	time:获取当前时间，并进行时间日期操作和格式化；
	random：通过该模块中的函数可以产生随机数，从序列中选取随机元素以及打乱列表元素；
	shelve：通过该模块可以创建持续性映射，同时将映射内容保存在给定文件名的数据库中
	set、heapq和deque：提供了三个有用的数据库结构，集合也已内建的set存在 



