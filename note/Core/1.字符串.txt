字符串str：字符串是以单引号'或双引号"括起来的任意文本.
	字符串是不可变的，分片赋值等都是不合法的
	1.也可以是'''表示：一般用来长文本，在其中单引号和双引号都不需要特殊处理
	2.r'str'表示无需转换，原始字符串
	

	1.格式化字符串:
		1) %运算符就是用来格式化字符串的
		format_string %(arguments_to_convert)
		
		%s表示用字符串替换，%d表示用整数替换，有几个%?占位符，后面就跟几个变量或者值，顺序要对应。如果只有一个%?，括号可以省略。
	
		常见的占位符有：
		%d 整数
		%f 浮点数
		%s 字符串
		%x 十六进制整数
		其他：
			%c 字符（ASCII值或长度为1的字符串）
			%r 优先使用repr()函数进行字符串转换
			%i == %d 转换成带符号十进制整数
			%u	转换成无符号十进制整数
			%o	转换成无符号八进制数
			%x == %X	十六进制整数
			%e == %E	转换为科学计数法（e/E控制输出e/E）
			%f == %F	转换为浮点数
			%%	输出%
			
		辅助符：
			* 定义精度或宽度
			- 左对齐
			+ 在正数前显示加号 
			<sp> 在正数前显示空格
			# 八进制前显示 0 ，在十六进制前显示‘0x’或‘0X’：取决于使用‘x’还是‘X’
			0 显示数字前用0填充而不是默认的空格
			(var) 映射变量（参数为字典）
			m.n m是显示的最小总宽度，n是小数点后的位数

		>>> print("%03d" %1)  #前补0 
		001
		>>> print("%.3f" %3.1415) #等价于%0.3f
		3.142
	  注：只有元组和字典可以格式化一个以上的值，列表或其他序列会解释为一个值。
		2) 模板字符串：
			S = Template('$x, glorious $x!')
			S.subStitute(x = 'slurm')
			S = Template("It's ${x} tastic!")
			
			字典提供 值/名称 对：
				S = Template('A $thing must never $action!')
				d = {'thing':'gentleman', 'action':'Show his socks'}
				s.substitute(d)
	  注: 在使用Template时，如果要使用美元符号则$$
			safe_subtitute不会出错
	
	2.方法：
		1)find：
			string.find(str, beg=0, end=len(string))
			检测 str 是否包含在 string 中，如果 beg 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回-1
		2)join:
		3)splite：如果不提供任何分隔符，会把(空格，制表，换行符)作为分割
			当你需要更加灵活的切割字符串的时候，最好使用 re.split() 方法：返回
		4)lower:
		5)replace:
		6)strip：返回去除两侧(不含内部)空格的字符串
		7)translate:替换字符串中的某些部分，只处理单个字符
		8)capwords(s[,seq]):首字母大写
		9)isspace()
		10)ord:
			
1.C		//存在问题
2.T
3.T
4.D
5.D		//
6.CD	//
7.T
8.BD	//
9.False
10.False
11.python.
12.and
13.ord('a')


